@mixin changeSize($widthAcquis, $height, $widthBouton) {
	.mat-row {
		height: $height * 1px;
	}

	.image {
		//max-width: 40px !important;
		max-height: $height - 5 * 1px !important;
	}

	.mat-column-acquis,
	.mat-column-doublon {
		width: $widthAcquis * 1px !important;
		max-width: $widthAcquis * 1px !important;
		padding: 0px !important;
	}

	.mat-column-ajouter,
	.mat-column-modifier,
	.mat-column-supprimer {
		width: $widthBouton * 1px !important;
		max-width: $widthBouton * 1px !important;
		padding: 0px !important;
	}
}

@mixin changeSizeMobile($fontSize, $padding, $widthDrapeau, $widthLibelle, $widthPage, $widthTotal) {
	th, td {
		padding: 0px $padding * 1px !important;
	}

	th, .mat-row {
		font-size: $fontSize * 1em;
	}

	.mat-column-libelle,
	::ng-deep .mat-column-libelle .mat-sort-header-container {
		width: $widthLibelle * 1px !important;
		max-width: $widthLibelle * 1px !important;
	}

	.mat-column-drapeau,
	::ng-deep .mat-column-drapeau span {
		width: $widthDrapeau * 1px !important;
		max-width: $widthDrapeau * 1px !important;
	}

	.mat-column-classeur,
	::ng-deep .mat-column-classeur .mat-sort-header-container,
	.mat-column-page,
	::ng-deep .mat-column-page .mat-sort-header-container {
		width: $widthPage * 1px !important;
		max-width: $widthPage * 1px !important;
	}

	.mat-column-total,
	::ng-deep .mat-column-total .mat-sort-header-container {
		width: $widthTotal * 1px !important;
		max-width: $widthTotal * 1px !important;
	}
}

@include changeSize(60, 35, 35);

@media screen and (max-width: 800px) {
	@include changeSize(50, 25, 20);
	@include changeSizeMobile(0.8, 5, 15, 40, 15, 25);

	.hide-on-mobile {
		display: none;
	}
}
